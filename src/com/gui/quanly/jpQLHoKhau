/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gui.quanly;

import com.dao.IDongGopDAO;
import com.dao.IHoKhauDAO;
import com.dao.ITheLoaiDongGopDAO;
import com.dao.IThuPhiDAO;
import com.dao.impl.DongGopDAO;
import com.dao.impl.HoKhauDAO;
import com.dao.impl.TheLoaiDongGopDAO;
import com.dao.impl.ThuPhiDAO;
import com.model.DongGopModel;
import com.model.HoKhauModel;
import com.model.ThuPhiModel;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class jpQLHoKhau extends javax.swing.JPanel {

    IHoKhauDAO hkdao = new HoKhauDAO();
    IDongGopDAO dgdao = new DongGopDAO();
    IThuPhiDAO tpdao = new ThuPhiDAO();
    ITheLoaiDongGopDAO tldao = new TheLoaiDongGopDAO();
    DefaultTableModel tableModel;
    List<DongGopModel> dgList = new ArrayList<>();

    DefaultTableModel tableModel2;
    List<ThuPhiModel> tpList = new ArrayList<>();

    /**
     * Creates new form jpHoKhau
     */
    public jpQLHoKhau() {
        initComponents();
        tableModel = (DefaultTableModel) tblDG.getModel();
        tableModel2 = (DefaultTableModel) tblTP.getModel();
        fillTblDG();
        fillTblTP();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenHK = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDG = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTP = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153)));
        setPreferredSize(new java.awt.Dimension(950, 425));

        jLabel1.setText("CHI TIáº¾T Tá»ªNG KHOáº¢N TIá»€N");

        jLabel2.setText("Nháº­p tÃªn há»™ kháº©u:");

        tblDG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MÃ£ Ä�Ã³ng GÃ³p", "TÃªn Há»™ Kháº©u", "Sá»‘ Tiá»�n", "TÃªn Loáº¡i Ä�Ã³ng GÃ³p", "NgÃ y Ä�Ã³ng GÃ³p", "Ghi ChÃº"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDG);

        tblTP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ£ Thu PhÃ­", "TÃªn Há»™ Kháº©u", "Sá»‘ Tiá»�n", "NgÃ y Thu PhÃ­"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTP);

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenHK, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenHK, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fillResultTblDG();
        fillResultTblTP();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDG;
    private javax.swing.JTable tblTP;
    private javax.swing.JTextField txtTenHK;
    // End of variables declaration//GEN-END:variables

    NumberFormat chuyentien = new DecimalFormat("#,###,###");
    SimpleDateFormat sf = new SimpleDateFormat("dd/MM/yyyy");

    public void fillResultTblDG() {
        HoKhauModel hk = hkdao.findByTen(txtTenHK.getText());
        dgList = dgdao.findByMaHK(hk.getMaHK());
        tableModel.setRowCount(0);
        dgList.forEach((dg) -> {
            String tenHK = hkdao.findByMa(dg.getMaHoKhau()).getTenHK();
            String tenTL = tldao.findByMa(dg.getMaTheLoaiDG()).getTenTheLoaiDG();
            tableModel.addRow(new Object[]{dg.getMaDongGop(), tenHK, chuyentien.format(dg.getSoTienDG()), tenTL, sf.format(dg.getNgayDG()), dg.getGhiChu()});
        });
    }

    public void fillResultTblTP() {
        HoKhauModel hk = hkdao.findByTen(txtTenHK.getText());
        tpList = tpdao.findByMaHK(hk.getMaHK());
        tableModel2.setRowCount(0);
        for (ThuPhiModel tp : tpList) {
            String tenHK = hkdao.findByMa(tp.getMaHoKhau()).getTenHK();
            tableModel2.addRow(new Object[]{tp.getMaThuPhi(), tenHK, chuyentien.format(tp.getSoTien()), sf.format(tp.getNgayThuPhi())});
        }
    }

    public void fillTblDG() {
        dgList = dgdao.findAll();
        tableModel.setRowCount(0);
        dgList.forEach((dg) -> {
            String tenHK = hkdao.findByMa(dg.getMaHoKhau()).getTenHK();
            String tenTL = tldao.findByMa(dg.getMaTheLoaiDG()).getTenTheLoaiDG();
            tableModel.addRow(new Object[]{dg.getMaDongGop(), tenHK, chuyentien.format(dg.getSoTienDG()), tenTL, sf.format(dg.getNgayDG()), dg.getGhiChu()});
        });
    }

    public void fillTblTP() {
        tpList = tpdao.findAll();
        tableModel2.setRowCount(0);
        tpList.forEach((tp) -> {
            String tenHK = hkdao.findByMa(tp.getMaHoKhau()).getTenHK();
            tableModel2.addRow(new Object[]{tp.getMaThuPhi(), tenHK, sf.format(tp.getNgayThuPhi()), chuyentien.format(tp.getSoTien())});
        });
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
